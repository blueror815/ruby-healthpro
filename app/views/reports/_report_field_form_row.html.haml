/ - fields = [['boolean', 'Boolean'], ['date_interval', 'Date interval'], ['date', 'Date (expires in x days)'], ['expirable_file', 'Expirable file'], ['file', 'File']]
-if @report.custom_form
  - fields = @report.custom_form.basic_field_types.map{|field| [field, field.titleize]}
- else
  - fields = []
  
.form-horizontal
  .form-group
    = f.label :field_type, { class: "col-sm-1 control-label text-right" }
    .col-sm-11
      = f.collection_select :field_type, fields, :first, :last, {}, { class: "form-control field_type_select", "data-id": "#{field_type_id}" }
.form-horizontal
  .form-group
    = render 'field_selector', f: f

.form-horizontal
  .form-group
    = render 'aliases_selector', f: f

  .form-horizontal

    = f.fields_for :value_options, OpenStruct.new(f.object.value_options) do |value_option|
      .form-group.days_fields.option_fields{class: "#{'hidden' if !['date', 'expirable_file'].include?f.object.field_type }" }
        = value_option.label :days, { class: "col-sm-1 control-label text-right" }
        .col-sm-11
          = value_option.text_field :days, class: "form-control numbers_only"
      .form-group.interval_fields.option_fields{class: "#{'hidden' if f.object.field_type != 'date_interval'}" }
        = value_option.label :from, { class: "col-sm-1 control-label text-right" }
        .col-sm-11
          = value_option.text_field :from, class: "form-control datePickerField"
      .form-group.interval_fields.hidden.option_fields
        = value_option.label :to, { class: "col-sm-1 control-label text-right" }
        .col-sm-11
          = value_option.text_field :to, class: "form-control datePickerField"
      .form-group.boolean_fields.option_fields{class: "#{'hidden' if f.object.field_type != 'boolean'}" }
        = f.label :field_value, { class: "col-sm-1 control-label text-right" }
        .col-sm-11
          = f.select :field_value, [[true, '1'], [false, '0']], {}, { class: "form-control" }

- if f.object.field_type != 'boolean'
  .form-horizontal
    .form-group.include_empty_container
      = f.fields_for :value_options, OpenStruct.new(f.object.value_options) do |value_option|
        = render 'reports/query_fields/blank_flag', option: value_option
